name: Build, Test and Push Docker Image (Tagged & Multi-Arch)

on:
  push:
    paths:
      - 'Dockerfile'
    branches: [ "main", "master" ]
    tags:
      - 'v*'

jobs:
  build:
    #runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker tags
      id: docker_tag
      shell: bash
      run: |
        IMAGE_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
        echo "image_name=$IMAGE_NAME" >> "$GITHUB_OUTPUT"
        SHA_SHORT=$(echo "${GITHUB_SHA}" | cut -c1-7)
        echo "sha_tag=$SHA_SHORT" >> "$GITHUB_OUTPUT"
        BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        echo "build_date=$BUILD_DATE" >> "$GITHUB_OUTPUT"
        if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
          VERSION_TAG="${GITHUB_REF#refs/tags/}"
          echo "version_tag=$VERSION_TAG" >> "$GITHUB_OUTPUT"
        fi
        FROM_LINE=$(grep -m1 -E '^FROM ' Dockerfile)
        if [[ "$FROM_LINE" == *":"* ]]; then
          BASE_TAG=$(echo "$FROM_LINE" | sed -E 's/FROM\s+[^:]+:(.*)/\1/')
        else
          BASE_TAG="latest"
        fi
        echo "base_tag=$BASE_TAG" >> "$GITHUB_OUTPUT"

    - name: Set up QEMU (for multi-arch builds)
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        ecr: auto
        logout: true

    - name: Build image (test-only stage)
      run: |
        docker buildx build --load -t ${{ steps.docker_tag.outputs.image_name }}:test \
          --build-arg BUILD_DATE="${{ steps.docker_tag.outputs.build_date }}" \
          --build-arg VERSION="${{ steps.docker_tag.outputs.version_tag || steps.docker_tag.outputs.sha_tag }}" \
          --build-arg VCS_REF="${{ steps.docker_tag.outputs.sha_tag }}" .

    - name: Run image test
      run: |
        docker run --rm --entrypoint echo ${{ steps.docker_tag.outputs.image_name }}:test "Hello from ComfyUI!" | grep "Hello from ComfyUI"

    - name: Build and push multi-arch image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ steps.docker_tag.outputs.image_name }}:latest
          ${{ steps.docker_tag.outputs.image_name }}:${{ steps.docker_tag.outputs.sha_tag }}
          ${{ steps.docker_tag.outputs.version_tag && format('{0}:{1}', steps.docker_tag.outputs.image_name, steps.docker_tag.outputs.version_tag) || '' }}
          ${{ steps.docker_tag.outputs.image_name }}:${{ steps.docker_tag.outputs.base_tag }}
        build-args: |
          BUILD_DATE=${{ steps.docker_tag.outputs.build_date }}
          VERSION=${{ steps.docker_tag.outputs.version_tag || steps.docker_tag.outputs.sha_tag }}
          VCS_REF=${{ steps.docker_tag.outputs.sha_tag }}
