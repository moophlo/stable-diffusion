apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '10'
    field.cattle.io/publicEndpoints: >-
      [{"nodeName":":diapolinux.mufloland.it","addresses":["2.49.137.1"],"port":7860,"protocol":"TCP","podName":"llm:sd-stable-diffusion-sd-stable-diffusion-diffusion-65b465b5wprzv","allNodes":false}]
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
    meta.helm.sh/release-name: sd
    meta.helm.sh/release-namespace: llm
  creationTimestamp: '2024-07-28T06:53:14Z'
  generation: 47
  labels:
    app.kubernetes.io/instance: sd
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: stable-diffusion
    app.kubernetes.io/version: 1.10.0
    helm.sh/chart: stable-diffusion-0.1.3
    io.kompose.service: diffusion
  managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kompose.cmd: {}
            f:kompose.version: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:io.kompose.service: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kompose.cmd: {}
                f:kompose.version: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
                f:io.kompose.service: {}
            f:spec:
              f:containers:
                k:{"name":"diffusion"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"COMMANDLINE_ARGS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HIP_VISIBLE_DEVICES"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WEBUI_PASSWORD"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"WEBUI_USER"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":7860,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:amd.com/gpu: {}
                  f:securityContext:
                    .: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                  f:stdin: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:tty: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/dockerx/stable-diffusion-webui/extensions"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/dockerx/stable-diffusion-webui/models"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"diffusion-cm"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"diffusion-extensions"}:
                  .: {}
                  f:name: {}
                k:{"name":"diffusion-models"}:
                  .: {}
                  f:name: {}
      manager: helm
      operation: Update
      time: '2024-07-28T07:05:33Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: '2024-07-29T15:43:51Z'
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:field.cattle.io/publicEndpoints: {}
        f:spec:
          f:replicas: {}
          f:template:
            f:metadata:
              f:namespace: {}
            f:spec:
              f:containers:
                k:{"name":"diffusion"}:
                  f:volumeMounts:
                    k:{"mountPath":"/dockerx/stable-diffusion-webui/venv"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsConfig:
                .: {}
                f:nameservers: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:volumes:
                k:{"name":"diffusion-extensions"}:
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
                k:{"name":"diffusion-models"}:
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
                k:{"name":"diffusion-venv"}:
                  .: {}
                  f:name: {}
                  f:persistentVolumeClaim:
                    .: {}
                    f:claimName: {}
      manager: rancher
      operation: Update
      time: '2024-07-29T15:43:51Z'
  name: sd-stable-diffusion-sd-stable-diffusion-diffusion
  namespace: llm
  resourceVersion: '547962400'
  uid: 6b0a1030-7cfa-4d69-953c-b32add576410
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: sd
      app.kubernetes.io/name: stable-diffusion
      io.kompose.service: diffusion
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: sd
        app.kubernetes.io/name: stable-diffusion
        io.kompose.service: diffusion
      namespace: llm
    spec:
      containers:
        - env:
            - name: HIP_VISIBLE_DEVICES
              value: '1'
            - name: COMMANDLINE_ARGS
              value: >-
                --listen --device-id=0 --precision full --no-half --medvram
                --skip-version-check --api --gradio-auth-path auth
                --enable-insecure-extension-access --opt-sub-quad-attention
            - name: WEBUI_USER
              value: moophlo
            - name: WEBUI_PASSWORD
              value: ThisIsMySuperSecurePassword.1975
          image: moophlo/stable-diffusion:v1.10.0_rocm5.2
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
                - curl --fail http://localhost:7860/sdapi/v1/options || exit 1
            failureThreshold: 3
            initialDelaySeconds: 900
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: diffusion
          ports:
            - containerPort: 7860
              name: 7860tcp
              protocol: TCP
          resources:
            limits:
              amd.com/gpu: '1'
          securityContext:
            capabilities:
              add:
                - SYS_PTRACE
            privileged: true
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
            - mountPath: /dockerx/stable-diffusion-webui/models
              name: diffusion-models
            - mountPath: /dockerx/stable-diffusion-webui/venv
              name: diffusion-venv
            - mountPath: /dockerx/stable-diffusion-webui/extensions
              name: diffusion-extensions
      dnsConfig:
        nameservers:
          - 1.1.1.1
      dnsPolicy: None
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: gpu
          operator: Equal
          value: 'true'
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: auth
                path: auth
            name: sd-stable-diffusion-cm
          name: diffusion-cm
        - name: diffusion-models
          persistentVolumeClaim:
            claimName: pv-sd-models
        - name: diffusion-venv
          persistentVolumeClaim:
            claimName: pv-sd-venv
        - name: diffusion-extensions
          persistentVolumeClaim:
            claimName: pv-sd-ext
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-07-28T06:53:15Z'
      lastUpdateTime: '2024-07-29T15:29:45Z'
      message: >-
        ReplicaSet
        "sd-stable-diffusion-sd-stable-diffusion-diffusion-65b465b575" has
        successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
    - lastTransitionTime: '2024-07-29T15:29:55Z'
      lastUpdateTime: '2024-07-29T15:29:55Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
  observedGeneration: 47
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-sd-models
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 500Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/media/muflo/Volume10TB/AI/sd-models"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: llm
  name: pv-sd-models
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: llm
  name: pv-sd-venv
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 15Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-sd-venv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 15Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/media/muflo/Volume10TB/AI/kube-sd-venv"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: llm
  name: pv-sd-ext
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-sd-ext
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/media/muflo/Volume10TB/AI/kube-sd-ext"
